{% extends 'base-admin.html.twig' %}

{% block title %}Groupe index{% endblock %}

{% block body %}
    <h1>Groupe index</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>NomGroupe</th>
                <th>Date</th>
                <th>Jour</th>
                <th>HeureDebut</th>
                <th>HeureFin</th>
                <th>AdresseNumero</th>
                <th>AdresseRue</th>
                <th>Cp</th>
                <th>Ville</th>
                <th>Pays</th>
                <th>Latitude</th>
                <th>Longitude</th>
                <th>Valide</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for groupe in groupes %}
            <tr>
                <td>{{ groupe.id }}</td>
                <td>{{ groupe.nomGroupe }}</td>
                <td>{{ groupe.date ? groupe.date|date('d/m/Y') : '' }}</td>
                <td>{{ groupe.jour }}</td>
                <td>{{ groupe.heureDebut }}</td>
                <td>{{ groupe.heureFin }}</td>
                <td>{{ groupe.adresseNumero }}</td>
                <td>{{ groupe.adresseRue }}</td>
                <td>{{ groupe.cp }}</td>
                <td>{{ groupe.ville }}</td>
                <td>{{ groupe.pays }}</td>
                <td>{{ groupe.latitude }}</td>
                <td>{{ groupe.longitude }}</td>
                <td>{{ groupe.valide ? 'Oui' : 'Non' }}</td>
                <td>
                    <a href="{{ path('groupe_show', {'id': groupe.id}) }}" class="small-btn_inline">Voir le groupe</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="15">Auncun groupe enregistré</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
crossorigin=""/>
<link type="text/css" rel="stylesheet" href="//unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
<link type="text/css" rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.9/leaflet.draw.css" />

<style>
    #mapid { 
            height: 400px; 
            width: 600px;
            margin-left: auto;
            margin-right: auto;
            }
    
</style>


<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
crossorigin=""></script>
<script type="application/javascript" src="//unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script> 
{# <script type="application/javascript" src="//cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.9/leaflet.draw.js"></script> #}
<script type="application/javascript" src="//unpkg.com/@turf/turf@latest/turf.min.js"></script>



<br>
<br>
<br>
<br>

<div>

    <br>
    <button class="btn-2" id="cercle">CERCLE</button>
    <br>
    <button class="btn-2" id="cercle2">CERCLE2</button>



</div>

<div id="mapid">
    <script>
        
        window.onload = function(){
        document.getElementById('cercle').click();
        };

        var map = L.map('mapid').setView([{{app.user.latitude}}, {{app.user.longitude}}], 8);
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: 'pk.eyJ1IjoidmljdG9yNjgiLCJhIjoiY2twNWJmOHJoMDBuZzJvcGdnNG5kbmVxMCJ9.ceCKMLuTKKCdkTo95hU97Q'}).addTo(map);
        
        var circle = L.circle([{{app.user.latitude}}, {{app.user.longitude}}], {
        color: 'red',
        fillColor: '#f03',
        fillOpacity: 0.5,
        radius: {{app.user.distancekm}}*1000
        }).addTo(map);  

        
        var markers = new L.LayerGroup().addTo(map);

        {% for groupe in groupes %}
            var marker = new L.Marker([
                
            {{ groupe.latitude }}, {{ groupe.longitude }}
            
            ]).addTo(markers);
            
        {% endfor %}
            
            
        var  removedMarkers = [];
        var bt = document.querySelector("#cercle");
        bt.addEventListener("click", function(){
            markers.eachLayer(function (marker) {
                console.log("marker :  ",marker.getLatLng())
                let  d = map.distance(marker.getLatLng(), circle.getLatLng() )
                let isInside = d < circle.getRadius()
                if (!isInside) {
                    removedMarkers.push(marker);
                    marker.remove();
                    console.log(removedMarkers);
                }
            });
        });
        var bt2 = document.querySelector("#cercle2");
        bt2.addEventListener("click", function(){
            var prevRadius = circle.getRadius();
            var radius = {{app.user.distancekm}}*2000;
            circle.setRadius(radius);
            if(radius > prevRadius){
                console.log("radius > prevRadius", removedMarkers.length)
                for(var i = removedMarkers.length-1; i>=0; i--){
                    var marker = removedMarkers[i];
                    console.log(marker);
                    let  d = map.distance(marker.getLatLng(), circle.getLatLng() )
                    let isInside = d < circle.getRadius()
                    console.log("inside", isInside)
                    if (isInside) {
                        marker.addTo(markers);
                        removedMarkers.splice(i, 1);
                    }
                }
            }
        });  
    
    

    
    </script>
</div>
{% endblock %}
